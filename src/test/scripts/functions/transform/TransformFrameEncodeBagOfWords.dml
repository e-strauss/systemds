#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# Read the token sequence (1K) w/ 100 distinct tokens
Data = read($1, data_type="frame", format="csv");

if(as.boolean($4) & as.boolean($6)){
  RecCol= read($7, data_type="frame", format="csv");
  Data = cbind(Data,RecCol)
}
if(as.boolean($5) & as.boolean($6)){
  Data = cbind(Data,Data)
}

while(FALSE){}

if (as.boolean($4)) {
  if (as.boolean($5)) {
    jspec = "{ids: true, bag_of_words: [1,3], recode : [2,4]}";
  } else {
    jspec = "{ids: true, bag_of_words: [1], recode : [2]}";
  }
} else {
  if (as.boolean($5)) {
    jspec = "{ids: true, bag_of_words: [1,2]}";
  } else {
    jspec = "{ids: true, bag_of_words: [1]}";
  }
}

#Data2 = cbind(Data[,2], Data[,2])
#jspec2 = "{ids: true, dummycode : [1], recode : [2]}";
#[Data_enc2, Meta2] = transformencode(target=Data2, spec=jspec2);
#print(nrow(Data_enc2) + " x " + ncol(Data_enc2))
#print(toString(Data_enc2))
#print(toString(Meta2))

i = 0
total = 0
j = 0
while(i < 1){
  t0 = time()
  [Data_enc, Meta] = transformencode(target=Data, spec=jspec);
  if(i > 10){
    total = total + time() - t0
    j = j + 1
  }
  i = i + 1
}
print(total/1000000000 / j)
#Data_enc = transformapply(target=Data, spec=jspec, meta=Meta);
print(nrow(Data_enc) + " x " + ncol(Data_enc))
#reduce nr rows for large input tests
if(nrow(Data_enc) > 100){
  Data_enc = Data_enc[1:100,]
}
#print(toString(Data_enc))
#print(toString(Meta))
write(Data_enc, $2, format="text");
write(Meta, $3, format="csv");
